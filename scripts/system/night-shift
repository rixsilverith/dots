#!/usr/bin/bash

source "$DOTS_HOME/scripts/core/dot.sh"

##? Enables (Disables) a screen blue light filter
##?
##? Usage: dot (system|sys) night-shift (enable|disable|toggle)
##?
##?    Uses redshift. Should be binded to the `mod + r` key combination
##?    by default.
##?
docs::parse "$@"
script::depends_on redshift

# To track whether or not the night mode is enabled, we'll create
# the DOTS_NIGHT_SHIFT_FILE file in the redshift directory when night
# mode is enabled and delete it when it's disabled. This way is
# pretty easy for other scripts (mainly a custom Qtile widget) to
# know if night mode is enabled.
#
# By using this approach only one key bind is needed to toggle night
# mode instead of two.
DOTS_NIGHT_SHIFT_FILE="$DOTS_HOME/util/redshift/.night-shift-enabled"

temp="${2:-3700}"

night-shift::enable() {
  local -r temperature="$1"
  redshift -O "$temperature"
  touch "$DOTS_NIGHT_SHIFT_FILE"
  notify-send -i "$DOTS_HOME/wm/dunst/icons/nightshift.png" "Night shift" "Screen temperature adjusted" -t 2500
}

night-shift::disable() {
  redshift -x
  rm -f "$DOTS_NIGHT_SHIFT_FILE"
  notify-send -i "$DOTS_HOME/wm/dunst/icons/nightshift.png" "Night shift" "Screen temperature reseted" -t 2500
}

night-shift::toggle() {
  if [[ -f "$DOTS_NIGHT_SHIFT_FILE" ]]; then night-shift::disable
  else night-shift::enable $temp; fi
}

[[ $# -lt 1 ]] && dot sys night-shift -h && exit 0

case "$1" in
  "enable")  night-shift::enable $temp ;;
  "disable") night-shift::disable ;;
  "toggle")  night-shift::toggle ;;
  *)         dot sys night-shift -h && exit 0 ;;
esac
