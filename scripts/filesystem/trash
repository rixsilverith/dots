#!/usr/bin/bash

source "$DOTS_HOME/scripts/core/dot.sh"

##? Move (Restore) files to (from) trash bin
##?
##? Usage: dot (filesystem|fs) trash [info|restore|empty] [<files>]
docs::parse "$@"

trash="$XDG_DATA_HOME/trash"

[[ ! -d $trash ]] && mkdir -p $trash

get_files_in_trash() {
  local -r files=($(fd . $trash))
  for f in "${files[@]}"; do
    echo ${f##*/}
  done
}

_check_rights() {
  if [[ -r $1 && -w $1 ]]; then
    return 0
  else
    return 1
  fi
}

display_trash_info() {
  [[ $(fd . $trash | wc -l) -eq 0 ]] && log::info "Trash is empty :D" && exit 0

  local -r n_files=$(ls -lhA $trash | tail -n +2 | wc -l)
  local -r trash_size=$(ls -lhA $trash | head -n1 | awk '{print $2}')

  log::info "Trash contains $(tput setaf 2)$n_files files$(tput sgr0) with a total size of $(tput setaf 5)$trash_size$(tput sgr0)"
  log::info "Files in trash bin\n"
  echo -e "  Filename ($(tput setaf 6)size$(tput sgr0))"
  echo -e "  ----------------------------------"
  for file in $trash/*; do
    f_size=$(ls -lhA $file | awk '{print $5}')
    echo -e "  ${file##*/} ($(tput setaf 6)$f_size$(tput sgr0))"
  done
}

empty_trash() {
  [[ $(fd . $trash | wc -l) -eq 0 ]] && log::info "Trash is empty. Nothing to be removed :D" && exit 0

  for file in $trash/*; do
    unlink $file
  done
}

move_to_trash() {
  for item in "$@"; do
    origin_path=$(readlink -f $item)
    basename=$(basename $origin_path)
    file=${basename%.*}

    if [[ -e $origin_path ]]; then
      _check_rights $origin_path

      if [[ $? -eq 0 ]]; then
        mv $origin_path $trash
        log::info "File $(tput setaf 2)$basename$(tput sgr0) was trashed"
      else
        sudo -n true 2> /dev/null || log::error "You need to be root to trash $origin_path"
        sudo mv $origin_path $trash
        log::info "File $(tput setaf 2)$basename$(tput sgr0) was trashed"
      fi
    fi
  done
}

restore_file() {
  log::success "Todo: Restore files"
}

[[ $# -eq 0 ]] && display_trash_info && exit 0

cmd="$1"

case $cmd in
  "info") display_trash_info ;;
  "empty") empty_trash ;;
  "restore") restore_file "$1" ;;
  *) move_to_trash "$@" ;;
esac
